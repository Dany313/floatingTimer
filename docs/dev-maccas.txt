copy from scratch
https://github.com/TorryDo/Floating-Bubble-View

just stick everything in tmp

read code top to bottom, where is he adding view to window manager

might be able to have 100% opacity if my way works out
  switch overlay rendered in click target to fullscreen overlay when drag starts

communicate to service through user_prefs
that way can recover, no need to read intent onStartCommand

start the ui in service oncreate

refactor overlayViewFactory using https://github.com/KuhakuPixel/UberAlles/
how does floating bubble view lib work composeview lifecycleowner, recomposer etc

remove tmp activity and service from manifest.xml

test click past overlay on billingclient IAP buy dialog


why is addView ignoring position of layoutparams???

doitwrong
what if breaks prod.... oh well
just write a lot of test cases

architecture diagram
refactor slowly



billingclient
await after acknowledgePurchase to resume continuation


architecture

FloatingService
  ServiceState
    CountdownState
      OverlayState
    StopwatchState
      OverlayState

  OverlayController
    OverlayViewController x3
      OverlayViewHolder
        LayoutParams
        ComposeView


OverlayController
  FloatingService
    

step 1 service onconfigurationchanged width height

rewrite deriveFullscreenVisibleFlow to listen for isDragging

change layoutparam alpha to 1

StopwatchBubble
CountdownBubble

write a bunch of test cases

deriveFullscreenVisibleFlow from showTrash flow combine
